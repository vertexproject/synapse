name: testpkg
version: 0.0.1

logo:
    mime: image/svg
    path: docs/foobar.svg

modules:
    - name: testmod

external_modules:
    - name: testext
      package: synapse.tests.files
      package_path: stormmod/common

    - name: testextfile
      # This can be either an absolute path or relative path from where
      # the genpkg tool is executed from.
      file_path: synapse/tests/files/stormmod/common

graphs:
    - name: testgraph
      degrees: 2
      pivots: ["<- meta:seen <- meta:source"]
      filters: ["-#nope"]
      forms:
        inet:fqdn:
          pivots: ['<- *', '-> *']
          filters: ['-inet:fqdn:issuffix=1']

        syn:tag:
          pivots: ['-> *']

        "*":
          pivots: ['-> #']

docs:
    - title: Foo Bar
      path: docs/foobar.md

perms:
    - perm: [ power-ups, testpkg, user ]
      gate: cortex
      desc: Controls user access to testpkg.
      workflowconfig: true

configvars:
    - name: API key
      varname: testpkg:apikey
      desc: API key to use for querying the testpkg API.
      scopes: [ global, self ]
      workflowconfig: true
      type: hugenum

    - name: Tag Prefix
      varname: testpkg:tag:prefix
      desc: Tag prefix to use when recording tags.
      scopes: [ global, self ]
      default: rep.testpkg
      workflowconfig: true
      type: [inet:fqdn, [str, inet:url]]

commands:
    - name: testpkgcmd
      descr: |
        testpkgcmd does some stuff.
      forms:
        input:
          - test:str
        output:
          - test:int
        nodedata:
          - [testnd, inet:ipv4]
      cmdargs:
        - - foo
          - help: Help on foo opt
        - - --bar
          - help: Help on bar opt

    - name: testpkg.baz
      descr: |
        testpkgcmd does some stuff.
      cmdargs:
        - - foo
          - help: Help on foo opt
        - - --baz
          - help: Help on baz opt
            time: ival
            default: ["-7days", "now"]

optic:
    title: woot

    actions:

        - name: hehe
          storm: dofoo

        - name: barbar
          callback: dobar

    workflows:

      # testpkg-foo will get inserted from the workflows/testpkg-foo.yaml file

      testpkg-bar:
        name: bar
        desc: this is an inline workflow

      testpkg-baz:
        name: baz
        desc: this workflow gets overwritten by the workflows/testpkg-baz.yaml file
