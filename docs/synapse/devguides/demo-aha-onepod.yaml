apiVersion: v1
kind: Secret
metadata:
  name: ex00-passwds
  labels:
    app: demostack
data:
  # secretpass
  corepass: "c2VjcmV0cGFzcw=="
  # ssapterces
  svcpass: "c3NhcHRlcmNlcw=="
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cert-ex00
  labels:
    app: examplestack
    instance: ex00
spec:
  secretName: ex00-staging-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - your-org
  commonName: ex00.k8s.yourdomain.tld
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
  - ex00.k8s.yourdomain.tld
  issuerRef:
    name: le-http-staging-issuer
    kind: ClusterIssuer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: examplestack-ex00
  labels:
    app: examplestack
    instance: ex00
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: do-block-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: examplestack-ex00
  labels:
    app: examplestack
    instance: ex00
spec:
  selector:
    matchLabels:
      app: examplestack
  template:
    metadata:
      labels:
        app: examplestack
        instance: ex00
    spec:
      volumes:
      - name: ex-data
        persistentVolumeClaim:
          claimName: examplestack-ex00
      - name: optic-tls
        secret:
          secretName: ex00-staging-tls
          items:
            - key: tls.key
              path: sslkey.pem
            - key: tls.crt
              path: sslcert.pem
      initContainers:
      - name: init-optic00
        image: vertexproject/synapse:v2.x.x
        imagePullPolicy: Always
        command: ['/bin/bash']
        args:
          - -c
          - >-
            cp -v --target-directory /vertex/storage /vertex/tls/sslkey.pem /vertex/tls/sslcert.pem
        volumeMounts:
          - name: optic-tls
            mountPath: /vertex/tls
            readOnly: true
          - name: ex-data
            mountPath: /vertex/storage
            subPath: optic
      containers:
      - name: core00
        image: vertexproject/synapse-cortex:v2.x.x
        command: ["python"]
        args: ["-O", "-m", "synapse.servers.cortex", "/vertex/storage"]
        env:
          - name: SYN_CORTEX_DMON_LISTEN
            value: "tcp://0.0.0.0:27492/"
          - name: SYN_CORTEX_STORM_LOG
            value: "true"
          - name: SYN_CORTEX_STORM_LOG_LEVEL
            value: INFO
          - name: SYN_CORTEX_HTTPS_PORT
            value: null
          - name: SYN_LOG_LEVEL
            value: DEBUG
          - name: SYN_CORTEX_AHA_NETWORK
            value: aha.demo.net
          - name: SYN_CORTEX_AHA_NAME
            value: cortex
          - name: SYN_CORTEX_AUTH_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: corepass
          - name: SYN_SVC_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: svcpass
          - name: SYN_CORTEX_AHA_REGISTRY
            value: tcp://root:$(SYN_SVC_PASSWD)@127.0.0.1:28000/
          - name: SYN_CORTEX_AXON
            value: aha://root:$(SYN_SVC_PASSWD)@axon.aha.demo.net/
        volumeMounts:
          - mountPath: /vertex/storage
            name: ex-data
            subPath: core
        imagePullPolicy: Always
      - name: aha00
        image: vertexproject/synapse-aha:master
        env:
          - name: SYN_LOG_LEVEL
            value: DEBUG
          - name: SYN_AHACELL_DMON_LISTEN
            value: "tcp://0.0.0.0:28000"
          - name: SYN_AHACELL_AUTH_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: svcpass
          - name: SYN_AHACELL_HTTPS_PORT
            value: null
        volumeMounts:
          - mountPath: /vertex/storage
            name: ex-data
            subPath: aha
        imagePullPolicy: Always
      - name: axon00
        image: vertexproject/synapse-axon:v2.x.x
        env:
          - name: SYN_LOG_LEVEL
            value: DEBUG
          - name: SYN_AXON_DMON_LISTEN
            value: "tcp://0.0.0.0:0"
          - name: SYN_AXON_HTTPS_PORT
            value: null
          - name: SYN_SVC_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: svcpass
          - name: SYN_AXON_AHA_REGISTRY
            value: tcp://root:$(SYN_SVC_PASSWD)@127.0.0.1:28000/
          - name: SYN_AXON_AUTH_PASSWD
            value: $(SYN_SVC_PASSWD)
          - name: SYN_AXON_AHA_NETWORK
            value: aha.demo.net
          - name: SYN_AXON_AHA_NAME
            value: axon
        volumeMounts:
          - mountPath: /vertex/storage
            name: ex-data
            subPath: axon
        imagePullPolicy: Always
      - name: maxmind00
        image: vertexproject/synapse-maxmind:v2.x.x
        env:
          - name: SYN_LOG_LEVEL
            value: DEBUG
          - name: SYN_MAXMIND_DMON_LISTEN
            value: "tcp://0.0.0.0:0"
          - name: SYN_MAXMIND_HTTPS_PORT
            value: null
          - name: SYN_SVC_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: svcpass
          - name: SYN_MAXMIND_AHA_REGISTRY
            value: tcp://root:$(SYN_SVC_PASSWD)@127.0.0.1:28000/
          - name: SYN_MAXMIND_AUTH_PASSWD
            value: $(SYN_SVC_PASSWD)
          - name: SYN_MAXMIND_AHA_NETWORK
            value: aha.demo.net
          - name: SYN_MAXMIND_AHA_NAME
            value: maxmind
        volumeMounts:
          - mountPath: /vertex/storage
            name: ex-data
            subPath: maxmind
        imagePullPolicy: Always
      - name: optic00
        image: vertexproject/optic:v2.x.x
        env:
          - name: SYN_LOG_LEVEL
            value: DEBUG
          - name: SYN_OPTIC_EMAIL_HOST
            value: exim
          - name: SYN_OPTIC_DMON_LISTEN
            value: "null"
          - name: SYN_OPTIC_NETLOC
            value: "ex00.k8s.yourdomain.tld"
          - name: SYN_SVC_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: svcpass
          - name: SYN_OPTIC_AHA_REGISTRY
            value: tcp://root:$(SYN_SVC_PASSWD)@127.0.0.1:28000/
          - name: SYN_OPTIC_AXON
            value: aha://root:$(SYN_SVC_PASSWD)@axon.aha.demo.net/
          - name: SYN_CORTEX_PASSWD
            valueFrom:
              secretKeyRef:
                name: ex00-passwds
                key: corepass
          - name: SYN_OPTIC_CORTEX
            value: "aha://root:$(SYN_CORTEX_PASSWD)@cortex.aha.demo.net/"
        ports:
          - containerPort: 4443
        volumeMounts:
          - mountPath: /vertex/storage
            name: ex-data
            subPath: optic
        imagePullPolicy: Always
      restartPolicy: Always
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: examplestack-ex00
  labels:
    instance: ex00
    app: examplestack
  namespace: default
spec:
  selector:
    instance: ex00
  ports:
    - port: 4443
      protocol: TCP
      name: optic
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: examplestack-ex00-ingress
  labels:
    instance: ex00
    app: examplestack
spec:
  entryPoints:
    - websecure
  routes:
  - match: HostSNI(`ex00.k8s.yourdomain.tld`)
    services:
      - name: examplestack-ex00
        port: 4443
  tls:
    passthrough: true
