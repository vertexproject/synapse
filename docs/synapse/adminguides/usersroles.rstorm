.. highlight:: none

.. storm-cortex:: default

.. _admin_create_users_roles:

Create and Manage Users and Roles
#################################

A :ref:`gloss-user` account is required to authenticate to and access Synapse. Having "a Synapse account" effectively
means having an account in the Cortex.

In Synapse, a :ref:`gloss-role` can be used to "group" users (users are **granted** specific roles). You can grant
(or deny) **permissions** to both users and roles by assigning **rules** that specify permissions.

Synapse includes the following built-in users and roles:

- **Root** user. The **root** account has :ref:`admin_bkd_admin` privileges in the Cortex. The **admin**
  status of the root account cannot be revoked, and the account cannot be locked / disabled.
- **All** role. The **all** role has **read** access to the Cortex (specifically, to any view with
  ``worldreadable=true``, which includes the **default** view). All user accounts are automatically granted
  the **all** role (are part of the **all** "group"); this role cannot be revoked.
  
For information on creating and managing users and roles with the commercial Optic UI, see the Synapse
`UI documentation`_.

.. NOTE::
  
  The descriptions and examples below assume that you have deployed Synapse using native Synapse management
  and authentication of users, roles, and permissions.
  
  The :ref:`devopsguide` includes information on provisioning **initial** users when Synapse is first deployed
  (see :ref:`devops-task-users`). This guide focuses on ongoing management of users and roles once Synapse
  is in production.


.. _admin_add_users:

Add Users
=========

New users can be added from the Storm CLI with the :ref:`storm-auth-user-add` command. Newly created users
do not have any permissions (other than those associated with the built-in **all** role).

.. NOTE::
  
  Depending on how your users will access the Cortex, you may need to take additional steps before those
  users can log in. For example, if users will access Synapse using the Telepath API and client-side
  certificates, you will need to follow the steps described in the :ref:`enroll_cli_users` section of the
  :ref:`deploymentguide`.

**Example:**

Add the user "Ron" with email address ``ronthecat@vertex.link``:

.. storm-cli:: auth.user.add ron --email ronthecat@vertex.link


.. TIP::
  
  User accounts are represented by a unique 128-bit identifier (iden). You can later change information about
  the user (such as the username or associated email address) without affecting the underlying account or any
  associated permissions.
  

.. _admin_add_roles:

Add Roles
=========

New roles can be added from the Storm CLI with the :ref:`storm-auth-role-add` command.

.. NOTE::
  
  Newly created roles do not have any permissions or associated user accounts.


**Example:**

Add the new role "cattribution analyst":

.. storm-cli:: auth.role.add "cattribution analyst"


.. TIP::
  
  Roles are represented by a unique 128-bit identifier (iden). You can later change information about the role
  (such as the role name) without affecting the underlying role or any associated permissions or users.


.. _admin_grant_roles:

Grant or Revoke Roles
=====================

**Granting** a role to a user allows the user to inherit the role's permissions. **Revoking** a role removes the
associated permissions from the user. It is not possible to grant a role to another role (i.e., roles cannot be
nested).

Roles can be granted or revoked using the :ref:`storm-auth-user-grant` and :ref:`storm-auth-user-revoke` commands.

**Examples:**

Grant the role "cattribution analyst" to the user "ron":

**STORM:** auth.user.grant ron "cattribution analyst"

Revoke the role "a-cat-emic researcher" from user "ron":

.. storm-pre:: auth.role.add "a-cat-emic researcher"

**STORM:** auth.user.revoke ron "a-cat-emic researcher"


.. NOTE::
  
  The order in which roles are granted to a user matters; when determining whether a user has permission to
  perform an action, the permissions for each of the user's roles are checked in sequence.
  
  Each role granted to a user is added to the **end** of the set of roles. To "reorder" roles, you must revoke
  them and grant them in the desired order (unless using the commercial Synapse UI, which allows drag-and-drop
  reordering). See :ref:`admin_perms_background` for additional detail on permissions and :ref:`admin_bkd_precedence`.


.. _UI documentation: https://synapse.docs.vertex.link/projects/optic/en/latest/index.html

  
